# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL

## creating table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

###Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 
## I answered the following questions: 

-- the 10 artist and their songs most popular in the database

SELECT Spotifydata.artist_name,Spotifydata.track_name,Spotifydata.popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

-- What is the average duration of songs per artist ?
SELECT SUM(Spotifydata.duration_ms)/COUNT(Spotifydata.artist_name) as average
FROM BIT_DB.Spotifydata;

-- how many songs by artis are in the list and the avg danceability of that songs
SELECT Spotifydata.artist_name,COUNT(Spotifydata.track_name) AS qty_songs, AVG(round(Spotifydata.danceability)) AS avgdance
FROM BIT_DB.Spotifydata
GROUP BY Spotifydata.artist_name
ORDER BY qty_songs DESC;

-- wich artis with more quantity of songs have the most energy in songs? 
SELECT DISTINCT Spotifydata.artist_name,COUNT(Spotifydata.track_name),SUM(Spotifydata.energy) AS totalenergy
FROM BIT_DB.Spotifydata
GROUP BY Spotifydata.artist_name
HAVING count(Spotifydata.track_name) > 2
ORDER BY totalenergy DESC;

-- What artist released the longest song? 

SELECT Spotifydata.artist_name,Spotifydata.duration_ms 
FROM BIT_DB.Spotifydata
ORDER BY Spotifydata.duration_ms DESC
LIMIT 1;

SELECT * FROM BIT_DB.Spotifydata;

-- the less popular song

SELECT Spotifydata.artist_name, Spotifydata.track_name,Spotifydata.popularity
from BIT_DB.Spotifydata
ORDER BY popularity ASC
LIMIT 1;


